/*
PingOne Advanced Identity Cloud API

## Introduction The PingOne Advanced Identity Cloud REST API lets you manage your Advanced Identity Cloud tenants. The API exposes access management and identity management endpoints, with additional endpoints specific to Advanced Identity Cloud tenant environments.<br /><br /> We are now publishing the API spec in OpenAPI 3.0. For the legacy Swagger 2.0 spec, please download [swagger.yaml](swagger.yaml), but note that it may not contain all new functionality.<br /><br /> For full PingOne Advanced Identity Cloud documentation, please visit [the docs website](https://docs.pingidentity.com/pingoneaic/latest/). ## Authenticating to the API The PingOne Advanced Identity Cloud REST API has two different authentication methods:   - [API key and secret](https://docs.pingidentity.com/pingoneaic/latest/developer-docs/authenticate-to-rest-api-with-api-key-and-secret.html): used for tenant read-only operations  - [Access token](https://docs.pingidentity.com/pingoneaic/latest/developer-docs/authenticate-to-rest-api-with-access-token.html): used for access management operations, identity management operations or tenant write operations  For a summary of how to use these authentication methods, refer to [Authenticate to Advanced Identity Cloud REST API](https://docs.pingidentity.com/pingoneaic/latest/developer-docs/authenticate-to-rest-api-overview.html).

API version:
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package identitycloud

import (
	"encoding/json"
)

// checks if the CreateCertificateSigningRequestRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCertificateSigningRequestRequest{}

// CreateCertificateSigningRequestRequest struct for CreateCertificateSigningRequestRequest
type CreateCertificateSigningRequestRequest struct {
	// The algorithm for the private key. The encryption algorithm will either be RSA-2048 or ECDSA P-256 depending on the algorithm choice. The default is RSA-2048.
	Algorithm *string `json:"algorithm,omitempty"`
	// Category of business, such as \"Private Organization\", “Government Entity”, “Business Entity”, or “Non-Commercial Entity”. Relevant for EV certificates.
	BusinessCategory *string `json:"businessCategory,omitempty"`
	City             *string `json:"city,omitempty"`
	// Domain name that the SSL certificate is securing
	CommonName *string `json:"commonName,omitempty"`
	// Two-letter ISO-3166 country code
	Country *string `json:"country,omitempty"`
	Email   *string `json:"email,omitempty"`
	// This field contains only information relevant to the Jurisdiction of Incorporation or Registration. Relevant for EV certificates.
	JurisdictionCity *string `json:"jurisdictionCity,omitempty"`
	// This field contains only information relevant to the Jurisdiction of Incorporation or Registration. Relevant for EV certificates.
	JurisdictionCountry *string `json:"jurisdictionCountry,omitempty"`
	// This field contains only information relevant to the Jurisdiction of Incorporation or Registration. Relevant for EV certificates.
	JurisdictionState *string `json:"jurisdictionState,omitempty"`
	// Full name of company
	Organization *string `json:"organization,omitempty"`
	// Company section or department
	OrganizationalUnit *string `json:"organizationalUnit,omitempty"`
	PostalCode         *string `json:"postalCode,omitempty"`
	// The Registration (or similar) Number assigned to the Subject by the Incorporating or Registration Agency in its Jurisdiction of Incorporation or Registration. Relevant for EV certificates.
	SerialNumber  *string `json:"serialNumber,omitempty"`
	State         *string `json:"state,omitempty"`
	StreetAddress *string `json:"streetAddress,omitempty"`
	// Additional domain or domains that the SSL certificate is securing
	SubjectAlternativeNames []string `json:"subjectAlternativeNames,omitempty"`
}

// NewCreateCertificateSigningRequestRequest instantiates a new CreateCertificateSigningRequestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCertificateSigningRequestRequest() *CreateCertificateSigningRequestRequest {
	this := CreateCertificateSigningRequestRequest{}
	return &this
}

// NewCreateCertificateSigningRequestRequestWithDefaults instantiates a new CreateCertificateSigningRequestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCertificateSigningRequestRequestWithDefaults() *CreateCertificateSigningRequestRequest {
	this := CreateCertificateSigningRequestRequest{}
	return &this
}

// GetAlgorithm returns the Algorithm field value if set, zero value otherwise.
func (o *CreateCertificateSigningRequestRequest) GetAlgorithm() string {
	if o == nil || IsNil(o.Algorithm) {
		var ret string
		return ret
	}
	return *o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCertificateSigningRequestRequest) GetAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.Algorithm) {
		return nil, false
	}
	return o.Algorithm, true
}

// HasAlgorithm returns a boolean if a field has been set.
func (o *CreateCertificateSigningRequestRequest) HasAlgorithm() bool {
	if o != nil && !IsNil(o.Algorithm) {
		return true
	}

	return false
}

// SetAlgorithm gets a reference to the given string and assigns it to the Algorithm field.
func (o *CreateCertificateSigningRequestRequest) SetAlgorithm(v string) {
	o.Algorithm = &v
}

// GetBusinessCategory returns the BusinessCategory field value if set, zero value otherwise.
func (o *CreateCertificateSigningRequestRequest) GetBusinessCategory() string {
	if o == nil || IsNil(o.BusinessCategory) {
		var ret string
		return ret
	}
	return *o.BusinessCategory
}

// GetBusinessCategoryOk returns a tuple with the BusinessCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCertificateSigningRequestRequest) GetBusinessCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessCategory) {
		return nil, false
	}
	return o.BusinessCategory, true
}

// HasBusinessCategory returns a boolean if a field has been set.
func (o *CreateCertificateSigningRequestRequest) HasBusinessCategory() bool {
	if o != nil && !IsNil(o.BusinessCategory) {
		return true
	}

	return false
}

// SetBusinessCategory gets a reference to the given string and assigns it to the BusinessCategory field.
func (o *CreateCertificateSigningRequestRequest) SetBusinessCategory(v string) {
	o.BusinessCategory = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *CreateCertificateSigningRequestRequest) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCertificateSigningRequestRequest) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *CreateCertificateSigningRequestRequest) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *CreateCertificateSigningRequestRequest) SetCity(v string) {
	o.City = &v
}

// GetCommonName returns the CommonName field value if set, zero value otherwise.
func (o *CreateCertificateSigningRequestRequest) GetCommonName() string {
	if o == nil || IsNil(o.CommonName) {
		var ret string
		return ret
	}
	return *o.CommonName
}

// GetCommonNameOk returns a tuple with the CommonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCertificateSigningRequestRequest) GetCommonNameOk() (*string, bool) {
	if o == nil || IsNil(o.CommonName) {
		return nil, false
	}
	return o.CommonName, true
}

// HasCommonName returns a boolean if a field has been set.
func (o *CreateCertificateSigningRequestRequest) HasCommonName() bool {
	if o != nil && !IsNil(o.CommonName) {
		return true
	}

	return false
}

// SetCommonName gets a reference to the given string and assigns it to the CommonName field.
func (o *CreateCertificateSigningRequestRequest) SetCommonName(v string) {
	o.CommonName = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *CreateCertificateSigningRequestRequest) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCertificateSigningRequestRequest) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *CreateCertificateSigningRequestRequest) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *CreateCertificateSigningRequestRequest) SetCountry(v string) {
	o.Country = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *CreateCertificateSigningRequestRequest) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCertificateSigningRequestRequest) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *CreateCertificateSigningRequestRequest) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *CreateCertificateSigningRequestRequest) SetEmail(v string) {
	o.Email = &v
}

// GetJurisdictionCity returns the JurisdictionCity field value if set, zero value otherwise.
func (o *CreateCertificateSigningRequestRequest) GetJurisdictionCity() string {
	if o == nil || IsNil(o.JurisdictionCity) {
		var ret string
		return ret
	}
	return *o.JurisdictionCity
}

// GetJurisdictionCityOk returns a tuple with the JurisdictionCity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCertificateSigningRequestRequest) GetJurisdictionCityOk() (*string, bool) {
	if o == nil || IsNil(o.JurisdictionCity) {
		return nil, false
	}
	return o.JurisdictionCity, true
}

// HasJurisdictionCity returns a boolean if a field has been set.
func (o *CreateCertificateSigningRequestRequest) HasJurisdictionCity() bool {
	if o != nil && !IsNil(o.JurisdictionCity) {
		return true
	}

	return false
}

// SetJurisdictionCity gets a reference to the given string and assigns it to the JurisdictionCity field.
func (o *CreateCertificateSigningRequestRequest) SetJurisdictionCity(v string) {
	o.JurisdictionCity = &v
}

// GetJurisdictionCountry returns the JurisdictionCountry field value if set, zero value otherwise.
func (o *CreateCertificateSigningRequestRequest) GetJurisdictionCountry() string {
	if o == nil || IsNil(o.JurisdictionCountry) {
		var ret string
		return ret
	}
	return *o.JurisdictionCountry
}

// GetJurisdictionCountryOk returns a tuple with the JurisdictionCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCertificateSigningRequestRequest) GetJurisdictionCountryOk() (*string, bool) {
	if o == nil || IsNil(o.JurisdictionCountry) {
		return nil, false
	}
	return o.JurisdictionCountry, true
}

// HasJurisdictionCountry returns a boolean if a field has been set.
func (o *CreateCertificateSigningRequestRequest) HasJurisdictionCountry() bool {
	if o != nil && !IsNil(o.JurisdictionCountry) {
		return true
	}

	return false
}

// SetJurisdictionCountry gets a reference to the given string and assigns it to the JurisdictionCountry field.
func (o *CreateCertificateSigningRequestRequest) SetJurisdictionCountry(v string) {
	o.JurisdictionCountry = &v
}

// GetJurisdictionState returns the JurisdictionState field value if set, zero value otherwise.
func (o *CreateCertificateSigningRequestRequest) GetJurisdictionState() string {
	if o == nil || IsNil(o.JurisdictionState) {
		var ret string
		return ret
	}
	return *o.JurisdictionState
}

// GetJurisdictionStateOk returns a tuple with the JurisdictionState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCertificateSigningRequestRequest) GetJurisdictionStateOk() (*string, bool) {
	if o == nil || IsNil(o.JurisdictionState) {
		return nil, false
	}
	return o.JurisdictionState, true
}

// HasJurisdictionState returns a boolean if a field has been set.
func (o *CreateCertificateSigningRequestRequest) HasJurisdictionState() bool {
	if o != nil && !IsNil(o.JurisdictionState) {
		return true
	}

	return false
}

// SetJurisdictionState gets a reference to the given string and assigns it to the JurisdictionState field.
func (o *CreateCertificateSigningRequestRequest) SetJurisdictionState(v string) {
	o.JurisdictionState = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *CreateCertificateSigningRequestRequest) GetOrganization() string {
	if o == nil || IsNil(o.Organization) {
		var ret string
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCertificateSigningRequestRequest) GetOrganizationOk() (*string, bool) {
	if o == nil || IsNil(o.Organization) {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *CreateCertificateSigningRequestRequest) HasOrganization() bool {
	if o != nil && !IsNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given string and assigns it to the Organization field.
func (o *CreateCertificateSigningRequestRequest) SetOrganization(v string) {
	o.Organization = &v
}

// GetOrganizationalUnit returns the OrganizationalUnit field value if set, zero value otherwise.
func (o *CreateCertificateSigningRequestRequest) GetOrganizationalUnit() string {
	if o == nil || IsNil(o.OrganizationalUnit) {
		var ret string
		return ret
	}
	return *o.OrganizationalUnit
}

// GetOrganizationalUnitOk returns a tuple with the OrganizationalUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCertificateSigningRequestRequest) GetOrganizationalUnitOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationalUnit) {
		return nil, false
	}
	return o.OrganizationalUnit, true
}

// HasOrganizationalUnit returns a boolean if a field has been set.
func (o *CreateCertificateSigningRequestRequest) HasOrganizationalUnit() bool {
	if o != nil && !IsNil(o.OrganizationalUnit) {
		return true
	}

	return false
}

// SetOrganizationalUnit gets a reference to the given string and assigns it to the OrganizationalUnit field.
func (o *CreateCertificateSigningRequestRequest) SetOrganizationalUnit(v string) {
	o.OrganizationalUnit = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *CreateCertificateSigningRequestRequest) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode) {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCertificateSigningRequestRequest) GetPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PostalCode) {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *CreateCertificateSigningRequestRequest) HasPostalCode() bool {
	if o != nil && !IsNil(o.PostalCode) {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *CreateCertificateSigningRequestRequest) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *CreateCertificateSigningRequestRequest) GetSerialNumber() string {
	if o == nil || IsNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCertificateSigningRequestRequest) GetSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *CreateCertificateSigningRequestRequest) HasSerialNumber() bool {
	if o != nil && !IsNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *CreateCertificateSigningRequestRequest) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *CreateCertificateSigningRequestRequest) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCertificateSigningRequestRequest) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *CreateCertificateSigningRequestRequest) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *CreateCertificateSigningRequestRequest) SetState(v string) {
	o.State = &v
}

// GetStreetAddress returns the StreetAddress field value if set, zero value otherwise.
func (o *CreateCertificateSigningRequestRequest) GetStreetAddress() string {
	if o == nil || IsNil(o.StreetAddress) {
		var ret string
		return ret
	}
	return *o.StreetAddress
}

// GetStreetAddressOk returns a tuple with the StreetAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCertificateSigningRequestRequest) GetStreetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.StreetAddress) {
		return nil, false
	}
	return o.StreetAddress, true
}

// HasStreetAddress returns a boolean if a field has been set.
func (o *CreateCertificateSigningRequestRequest) HasStreetAddress() bool {
	if o != nil && !IsNil(o.StreetAddress) {
		return true
	}

	return false
}

// SetStreetAddress gets a reference to the given string and assigns it to the StreetAddress field.
func (o *CreateCertificateSigningRequestRequest) SetStreetAddress(v string) {
	o.StreetAddress = &v
}

// GetSubjectAlternativeNames returns the SubjectAlternativeNames field value if set, zero value otherwise.
func (o *CreateCertificateSigningRequestRequest) GetSubjectAlternativeNames() []string {
	if o == nil || IsNil(o.SubjectAlternativeNames) {
		var ret []string
		return ret
	}
	return o.SubjectAlternativeNames
}

// GetSubjectAlternativeNamesOk returns a tuple with the SubjectAlternativeNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCertificateSigningRequestRequest) GetSubjectAlternativeNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.SubjectAlternativeNames) {
		return nil, false
	}
	return o.SubjectAlternativeNames, true
}

// HasSubjectAlternativeNames returns a boolean if a field has been set.
func (o *CreateCertificateSigningRequestRequest) HasSubjectAlternativeNames() bool {
	if o != nil && !IsNil(o.SubjectAlternativeNames) {
		return true
	}

	return false
}

// SetSubjectAlternativeNames gets a reference to the given []string and assigns it to the SubjectAlternativeNames field.
func (o *CreateCertificateSigningRequestRequest) SetSubjectAlternativeNames(v []string) {
	o.SubjectAlternativeNames = v
}

func (o CreateCertificateSigningRequestRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCertificateSigningRequestRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Algorithm) {
		toSerialize["algorithm"] = o.Algorithm
	}
	if !IsNil(o.BusinessCategory) {
		toSerialize["businessCategory"] = o.BusinessCategory
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.CommonName) {
		toSerialize["commonName"] = o.CommonName
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.JurisdictionCity) {
		toSerialize["jurisdictionCity"] = o.JurisdictionCity
	}
	if !IsNil(o.JurisdictionCountry) {
		toSerialize["jurisdictionCountry"] = o.JurisdictionCountry
	}
	if !IsNil(o.JurisdictionState) {
		toSerialize["jurisdictionState"] = o.JurisdictionState
	}
	if !IsNil(o.Organization) {
		toSerialize["organization"] = o.Organization
	}
	if !IsNil(o.OrganizationalUnit) {
		toSerialize["organizationalUnit"] = o.OrganizationalUnit
	}
	if !IsNil(o.PostalCode) {
		toSerialize["postalCode"] = o.PostalCode
	}
	if !IsNil(o.SerialNumber) {
		toSerialize["serialNumber"] = o.SerialNumber
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.StreetAddress) {
		toSerialize["streetAddress"] = o.StreetAddress
	}
	if !IsNil(o.SubjectAlternativeNames) {
		toSerialize["subjectAlternativeNames"] = o.SubjectAlternativeNames
	}
	return toSerialize, nil
}

type NullableCreateCertificateSigningRequestRequest struct {
	value *CreateCertificateSigningRequestRequest
	isSet bool
}

func (v NullableCreateCertificateSigningRequestRequest) Get() *CreateCertificateSigningRequestRequest {
	return v.value
}

func (v *NullableCreateCertificateSigningRequestRequest) Set(val *CreateCertificateSigningRequestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCertificateSigningRequestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCertificateSigningRequestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCertificateSigningRequestRequest(val *CreateCertificateSigningRequestRequest) *NullableCreateCertificateSigningRequestRequest {
	return &NullableCreateCertificateSigningRequestRequest{value: val, isSet: true}
}

func (v NullableCreateCertificateSigningRequestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCertificateSigningRequestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
