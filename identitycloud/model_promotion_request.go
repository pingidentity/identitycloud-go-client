/*
PingOne Advanced Identity Cloud API

## Introduction The PingOne Advanced Identity Cloud REST API lets you manage your Advanced Identity Cloud tenants. The API exposes access management and identity management endpoints, with additional endpoints specific to Advanced Identity Cloud tenant environments.<br /><br /> We are now publishing the API spec in OpenAPI 3.0. For the legacy Swagger 2.0 spec, please download [swagger.yaml](swagger.yaml), but note that it may not contain all new functionality.<br /><br /> For full PingOne Advanced Identity Cloud documentation, please visit [the docs website](https://docs.pingidentity.com/pingoneaic/latest/). ## Authenticating to the API The PingOne Advanced Identity Cloud REST API has two different authentication methods:   - [API key and secret](https://docs.pingidentity.com/pingoneaic/latest/developer-docs/authenticate-to-rest-api-with-api-key-and-secret.html): used for tenant read-only operations  - [Access token](https://docs.pingidentity.com/pingoneaic/latest/developer-docs/authenticate-to-rest-api-with-access-token.html): used for access management operations, identity management operations or tenant write operations  For a summary of how to use these authentication methods, refer to [Authenticate to Advanced Identity Cloud REST API](https://docs.pingidentity.com/pingoneaic/latest/developer-docs/authenticate-to-rest-api-overview.html).

API version:
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package identitycloud

import (
	"encoding/json"
)

// checks if the PromotionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PromotionRequest{}

// PromotionRequest struct for PromotionRequest
type PromotionRequest struct {
	// A boolean denoting whether this a dry run
	DryRun bool `json:"dryRun"`
	// A boolean denoting whether or not to ignore encrypted secrets detected in config during the promotion
	IgnoreEncryptedSecrets *bool `json:"ignoreEncryptedSecrets,omitempty"`
	// The name of the admin user who initiated the promotion
	Promoter *string `json:"promoter,omitempty"`
	// Promoter specified note to make it easier for them to identify what was promoted
	PromotionDescription *string `json:"promotionDescription,omitempty"`
	// A boolean denoting whether or not to automatically unlock the environments after a successful promotion
	UnlockEnvironmentsAfterPromotion *bool `json:"unlockEnvironmentsAfterPromotion,omitempty"`
	// A string denoting the Zendesk ticket reference to be added to the promotion commit message
	ZendeskTicketReference *string `json:"zendeskTicketReference,omitempty"`
}

// NewPromotionRequest instantiates a new PromotionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPromotionRequest(dryRun bool) *PromotionRequest {
	this := PromotionRequest{}
	this.DryRun = dryRun
	return &this
}

// NewPromotionRequestWithDefaults instantiates a new PromotionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPromotionRequestWithDefaults() *PromotionRequest {
	this := PromotionRequest{}
	return &this
}

// GetDryRun returns the DryRun field value
func (o *PromotionRequest) GetDryRun() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value
// and a boolean to check if the value has been set.
func (o *PromotionRequest) GetDryRunOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DryRun, true
}

// SetDryRun sets field value
func (o *PromotionRequest) SetDryRun(v bool) {
	o.DryRun = v
}

// GetIgnoreEncryptedSecrets returns the IgnoreEncryptedSecrets field value if set, zero value otherwise.
func (o *PromotionRequest) GetIgnoreEncryptedSecrets() bool {
	if o == nil || IsNil(o.IgnoreEncryptedSecrets) {
		var ret bool
		return ret
	}
	return *o.IgnoreEncryptedSecrets
}

// GetIgnoreEncryptedSecretsOk returns a tuple with the IgnoreEncryptedSecrets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionRequest) GetIgnoreEncryptedSecretsOk() (*bool, bool) {
	if o == nil || IsNil(o.IgnoreEncryptedSecrets) {
		return nil, false
	}
	return o.IgnoreEncryptedSecrets, true
}

// HasIgnoreEncryptedSecrets returns a boolean if a field has been set.
func (o *PromotionRequest) HasIgnoreEncryptedSecrets() bool {
	if o != nil && !IsNil(o.IgnoreEncryptedSecrets) {
		return true
	}

	return false
}

// SetIgnoreEncryptedSecrets gets a reference to the given bool and assigns it to the IgnoreEncryptedSecrets field.
func (o *PromotionRequest) SetIgnoreEncryptedSecrets(v bool) {
	o.IgnoreEncryptedSecrets = &v
}

// GetPromoter returns the Promoter field value if set, zero value otherwise.
func (o *PromotionRequest) GetPromoter() string {
	if o == nil || IsNil(o.Promoter) {
		var ret string
		return ret
	}
	return *o.Promoter
}

// GetPromoterOk returns a tuple with the Promoter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionRequest) GetPromoterOk() (*string, bool) {
	if o == nil || IsNil(o.Promoter) {
		return nil, false
	}
	return o.Promoter, true
}

// HasPromoter returns a boolean if a field has been set.
func (o *PromotionRequest) HasPromoter() bool {
	if o != nil && !IsNil(o.Promoter) {
		return true
	}

	return false
}

// SetPromoter gets a reference to the given string and assigns it to the Promoter field.
func (o *PromotionRequest) SetPromoter(v string) {
	o.Promoter = &v
}

// GetPromotionDescription returns the PromotionDescription field value if set, zero value otherwise.
func (o *PromotionRequest) GetPromotionDescription() string {
	if o == nil || IsNil(o.PromotionDescription) {
		var ret string
		return ret
	}
	return *o.PromotionDescription
}

// GetPromotionDescriptionOk returns a tuple with the PromotionDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionRequest) GetPromotionDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.PromotionDescription) {
		return nil, false
	}
	return o.PromotionDescription, true
}

// HasPromotionDescription returns a boolean if a field has been set.
func (o *PromotionRequest) HasPromotionDescription() bool {
	if o != nil && !IsNil(o.PromotionDescription) {
		return true
	}

	return false
}

// SetPromotionDescription gets a reference to the given string and assigns it to the PromotionDescription field.
func (o *PromotionRequest) SetPromotionDescription(v string) {
	o.PromotionDescription = &v
}

// GetUnlockEnvironmentsAfterPromotion returns the UnlockEnvironmentsAfterPromotion field value if set, zero value otherwise.
func (o *PromotionRequest) GetUnlockEnvironmentsAfterPromotion() bool {
	if o == nil || IsNil(o.UnlockEnvironmentsAfterPromotion) {
		var ret bool
		return ret
	}
	return *o.UnlockEnvironmentsAfterPromotion
}

// GetUnlockEnvironmentsAfterPromotionOk returns a tuple with the UnlockEnvironmentsAfterPromotion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionRequest) GetUnlockEnvironmentsAfterPromotionOk() (*bool, bool) {
	if o == nil || IsNil(o.UnlockEnvironmentsAfterPromotion) {
		return nil, false
	}
	return o.UnlockEnvironmentsAfterPromotion, true
}

// HasUnlockEnvironmentsAfterPromotion returns a boolean if a field has been set.
func (o *PromotionRequest) HasUnlockEnvironmentsAfterPromotion() bool {
	if o != nil && !IsNil(o.UnlockEnvironmentsAfterPromotion) {
		return true
	}

	return false
}

// SetUnlockEnvironmentsAfterPromotion gets a reference to the given bool and assigns it to the UnlockEnvironmentsAfterPromotion field.
func (o *PromotionRequest) SetUnlockEnvironmentsAfterPromotion(v bool) {
	o.UnlockEnvironmentsAfterPromotion = &v
}

// GetZendeskTicketReference returns the ZendeskTicketReference field value if set, zero value otherwise.
func (o *PromotionRequest) GetZendeskTicketReference() string {
	if o == nil || IsNil(o.ZendeskTicketReference) {
		var ret string
		return ret
	}
	return *o.ZendeskTicketReference
}

// GetZendeskTicketReferenceOk returns a tuple with the ZendeskTicketReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionRequest) GetZendeskTicketReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.ZendeskTicketReference) {
		return nil, false
	}
	return o.ZendeskTicketReference, true
}

// HasZendeskTicketReference returns a boolean if a field has been set.
func (o *PromotionRequest) HasZendeskTicketReference() bool {
	if o != nil && !IsNil(o.ZendeskTicketReference) {
		return true
	}

	return false
}

// SetZendeskTicketReference gets a reference to the given string and assigns it to the ZendeskTicketReference field.
func (o *PromotionRequest) SetZendeskTicketReference(v string) {
	o.ZendeskTicketReference = &v
}

func (o PromotionRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PromotionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dryRun"] = o.DryRun
	if !IsNil(o.IgnoreEncryptedSecrets) {
		toSerialize["ignoreEncryptedSecrets"] = o.IgnoreEncryptedSecrets
	}
	if !IsNil(o.Promoter) {
		toSerialize["promoter"] = o.Promoter
	}
	if !IsNil(o.PromotionDescription) {
		toSerialize["promotionDescription"] = o.PromotionDescription
	}
	if !IsNil(o.UnlockEnvironmentsAfterPromotion) {
		toSerialize["unlockEnvironmentsAfterPromotion"] = o.UnlockEnvironmentsAfterPromotion
	}
	if !IsNil(o.ZendeskTicketReference) {
		toSerialize["zendeskTicketReference"] = o.ZendeskTicketReference
	}
	return toSerialize, nil
}

type NullablePromotionRequest struct {
	value *PromotionRequest
	isSet bool
}

func (v NullablePromotionRequest) Get() *PromotionRequest {
	return v.value
}

func (v *NullablePromotionRequest) Set(val *PromotionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePromotionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePromotionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePromotionRequest(val *PromotionRequest) *NullablePromotionRequest {
	return &NullablePromotionRequest{value: val, isSet: true}
}

func (v NullablePromotionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePromotionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
