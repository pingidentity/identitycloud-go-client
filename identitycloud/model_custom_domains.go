/*
PingOne Advanced Identity Cloud API

## Introduction The PingOne Advanced Identity Cloud REST API lets you manage your Advanced Identity Cloud tenants. The API exposes access management and identity management endpoints, with additional endpoints specific to Advanced Identity Cloud tenant environments.<br /><br /> We are now publishing the API spec in OpenAPI 3.0. For the legacy Swagger 2.0 spec, please download [swagger.yaml](swagger.yaml), but note that it may not contain all new functionality.<br /><br /> For full PingOne Advanced Identity Cloud documentation, please visit [the docs website](https://docs.pingidentity.com/pingoneaic/latest/). ## Authenticating to the API The PingOne Advanced Identity Cloud REST API has two different authentication methods:   - [API key and secret](https://docs.pingidentity.com/pingoneaic/latest/developer-docs/authenticate-to-rest-api-with-api-key-and-secret.html): used for tenant read-only operations  - [Access token](https://docs.pingidentity.com/pingoneaic/latest/developer-docs/authenticate-to-rest-api-with-access-token.html): used for access management operations, identity management operations or tenant write operations  For a summary of how to use these authentication methods, refer to [Authenticate to Advanced Identity Cloud REST API](https://docs.pingidentity.com/pingoneaic/latest/developer-docs/authenticate-to-rest-api-overview.html).

API version:
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package identitycloud

import (
	"encoding/json"
)

// checks if the CustomDomains type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomDomains{}

// CustomDomains struct for CustomDomains
type CustomDomains struct {
	// Custom domains
	Domains []string `json:"domains,omitempty"`
}

// NewCustomDomains instantiates a new CustomDomains object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomDomains() *CustomDomains {
	this := CustomDomains{}
	return &this
}

// NewCustomDomainsWithDefaults instantiates a new CustomDomains object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomDomainsWithDefaults() *CustomDomains {
	this := CustomDomains{}
	return &this
}

// GetDomains returns the Domains field value if set, zero value otherwise.
func (o *CustomDomains) GetDomains() []string {
	if o == nil || IsNil(o.Domains) {
		var ret []string
		return ret
	}
	return o.Domains
}

// GetDomainsOk returns a tuple with the Domains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomDomains) GetDomainsOk() ([]string, bool) {
	if o == nil || IsNil(o.Domains) {
		return nil, false
	}
	return o.Domains, true
}

// HasDomains returns a boolean if a field has been set.
func (o *CustomDomains) HasDomains() bool {
	if o != nil && !IsNil(o.Domains) {
		return true
	}

	return false
}

// SetDomains gets a reference to the given []string and assigns it to the Domains field.
func (o *CustomDomains) SetDomains(v []string) {
	o.Domains = v
}

func (o CustomDomains) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomDomains) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Domains) {
		toSerialize["domains"] = o.Domains
	}
	return toSerialize, nil
}

type NullableCustomDomains struct {
	value *CustomDomains
	isSet bool
}

func (v NullableCustomDomains) Get() *CustomDomains {
	return v.value
}

func (v *NullableCustomDomains) Set(val *CustomDomains) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomDomains) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomDomains) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomDomains(val *CustomDomains) *NullableCustomDomains {
	return &NullableCustomDomains{value: val, isSet: true}
}

func (v NullableCustomDomains) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomDomains) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
