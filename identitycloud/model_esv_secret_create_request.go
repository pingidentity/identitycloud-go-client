/*
PingOne Advanced Identity Cloud API

## Introduction The PingOne Advanced Identity Cloud REST API lets you manage your Advanced Identity Cloud tenants. The API exposes access management and identity management endpoints, with additional endpoints specific to Advanced Identity Cloud tenant environments.<br /><br /> We are now publishing the API spec in OpenAPI 3.0. For the legacy Swagger 2.0 spec, please download [swagger.yaml](swagger.yaml), but note that it may not contain all new functionality.<br /><br /> For full PingOne Advanced Identity Cloud documentation, please visit [the docs website](https://docs.pingidentity.com/pingoneaic/latest/). ## Authenticating to the API The PingOne Advanced Identity Cloud REST API has two different authentication methods:   - [API key and secret](https://docs.pingidentity.com/pingoneaic/latest/developer-docs/authenticate-to-rest-api-with-api-key-and-secret.html): used for tenant read-only operations  - [Access token](https://docs.pingidentity.com/pingoneaic/latest/developer-docs/authenticate-to-rest-api-with-access-token.html): used for access management operations, identity management operations or tenant write operations  For a summary of how to use these authentication methods, refer to [Authenticate to Advanced Identity Cloud REST API](https://docs.pingidentity.com/pingoneaic/latest/developer-docs/authenticate-to-rest-api-overview.html).

API version:
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package identitycloud

import (
	"encoding/json"
)

// checks if the EsvSecretCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EsvSecretCreateRequest{}

// EsvSecretCreateRequest struct for EsvSecretCreateRequest
type EsvSecretCreateRequest struct {
	Description       *string `json:"description,omitempty"`
	Encoding          string  `json:"encoding"`
	UseInPlaceholders bool    `json:"useInPlaceholders"`
	ValueBase64       string  `json:"valueBase64"`
}

// NewEsvSecretCreateRequest instantiates a new EsvSecretCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEsvSecretCreateRequest(encoding string, useInPlaceholders bool, valueBase64 string) *EsvSecretCreateRequest {
	this := EsvSecretCreateRequest{}
	this.Encoding = encoding
	this.UseInPlaceholders = useInPlaceholders
	this.ValueBase64 = valueBase64
	return &this
}

// NewEsvSecretCreateRequestWithDefaults instantiates a new EsvSecretCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEsvSecretCreateRequestWithDefaults() *EsvSecretCreateRequest {
	this := EsvSecretCreateRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *EsvSecretCreateRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsvSecretCreateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *EsvSecretCreateRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *EsvSecretCreateRequest) SetDescription(v string) {
	o.Description = &v
}

// GetEncoding returns the Encoding field value
func (o *EsvSecretCreateRequest) GetEncoding() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Encoding
}

// GetEncodingOk returns a tuple with the Encoding field value
// and a boolean to check if the value has been set.
func (o *EsvSecretCreateRequest) GetEncodingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Encoding, true
}

// SetEncoding sets field value
func (o *EsvSecretCreateRequest) SetEncoding(v string) {
	o.Encoding = v
}

// GetUseInPlaceholders returns the UseInPlaceholders field value
func (o *EsvSecretCreateRequest) GetUseInPlaceholders() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.UseInPlaceholders
}

// GetUseInPlaceholdersOk returns a tuple with the UseInPlaceholders field value
// and a boolean to check if the value has been set.
func (o *EsvSecretCreateRequest) GetUseInPlaceholdersOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UseInPlaceholders, true
}

// SetUseInPlaceholders sets field value
func (o *EsvSecretCreateRequest) SetUseInPlaceholders(v bool) {
	o.UseInPlaceholders = v
}

// GetValueBase64 returns the ValueBase64 field value
func (o *EsvSecretCreateRequest) GetValueBase64() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ValueBase64
}

// GetValueBase64Ok returns a tuple with the ValueBase64 field value
// and a boolean to check if the value has been set.
func (o *EsvSecretCreateRequest) GetValueBase64Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValueBase64, true
}

// SetValueBase64 sets field value
func (o *EsvSecretCreateRequest) SetValueBase64(v string) {
	o.ValueBase64 = v
}

func (o EsvSecretCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EsvSecretCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["encoding"] = o.Encoding
	toSerialize["useInPlaceholders"] = o.UseInPlaceholders
	toSerialize["valueBase64"] = o.ValueBase64
	return toSerialize, nil
}

type NullableEsvSecretCreateRequest struct {
	value *EsvSecretCreateRequest
	isSet bool
}

func (v NullableEsvSecretCreateRequest) Get() *EsvSecretCreateRequest {
	return v.value
}

func (v *NullableEsvSecretCreateRequest) Set(val *EsvSecretCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEsvSecretCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEsvSecretCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEsvSecretCreateRequest(val *EsvSecretCreateRequest) *NullableEsvSecretCreateRequest {
	return &NullableEsvSecretCreateRequest{value: val, isSet: true}
}

func (v NullableEsvSecretCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEsvSecretCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
