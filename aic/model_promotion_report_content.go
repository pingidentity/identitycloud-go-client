/*
PingOne Advanced Identity Cloud API

## Introduction The PingOne Advanced Identity Cloud REST API lets you manage your Advanced Identity Cloud tenants. The API exposes access management and identity management endpoints, with additional endpoints specific to Advanced Identity Cloud tenant environments.<br /><br /> We are now publishing the API spec in OpenAPI 3.0. For the legacy Swagger 2.0 spec, please download [swagger.yaml](swagger.yaml), but note that it may not contain all new functionality.<br /><br /> For full PingOne Advanced Identity Cloud documentation, please visit [the docs website](https://docs.pingidentity.com/pingoneaic/latest/). ## Authenticating to the API The PingOne Advanced Identity Cloud REST API has two different authentication methods:   - [API key and secret](https://docs.pingidentity.com/pingoneaic/latest/developer-docs/authenticate-to-rest-api-with-api-key-and-secret.html): used for tenant read-only operations  - [Access token](https://docs.pingidentity.com/pingoneaic/latest/developer-docs/authenticate-to-rest-api-with-access-token.html): used for access management operations, identity management operations or tenant write operations  For a summary of how to use these authentication methods, refer to [Authenticate to Advanced Identity Cloud REST API](https://docs.pingidentity.com/pingoneaic/latest/developer-docs/authenticate-to-rest-api-overview.html).

API version:
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aic

import (
	"encoding/json"
)

// checks if the PromotionReportContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PromotionReportContent{}

// PromotionReportContent struct for PromotionReportContent
type PromotionReportContent struct {
	ConfigChange *PromotionReportContentConfigChange `json:"configChange,omitempty"`
	ConfigItem   *string                             `json:"configItem,omitempty"`
}

// NewPromotionReportContent instantiates a new PromotionReportContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPromotionReportContent() *PromotionReportContent {
	this := PromotionReportContent{}
	return &this
}

// NewPromotionReportContentWithDefaults instantiates a new PromotionReportContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPromotionReportContentWithDefaults() *PromotionReportContent {
	this := PromotionReportContent{}
	return &this
}

// GetConfigChange returns the ConfigChange field value if set, zero value otherwise.
func (o *PromotionReportContent) GetConfigChange() PromotionReportContentConfigChange {
	if o == nil || IsNil(o.ConfigChange) {
		var ret PromotionReportContentConfigChange
		return ret
	}
	return *o.ConfigChange
}

// GetConfigChangeOk returns a tuple with the ConfigChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionReportContent) GetConfigChangeOk() (*PromotionReportContentConfigChange, bool) {
	if o == nil || IsNil(o.ConfigChange) {
		return nil, false
	}
	return o.ConfigChange, true
}

// HasConfigChange returns a boolean if a field has been set.
func (o *PromotionReportContent) HasConfigChange() bool {
	if o != nil && !IsNil(o.ConfigChange) {
		return true
	}

	return false
}

// SetConfigChange gets a reference to the given PromotionReportContentConfigChange and assigns it to the ConfigChange field.
func (o *PromotionReportContent) SetConfigChange(v PromotionReportContentConfigChange) {
	o.ConfigChange = &v
}

// GetConfigItem returns the ConfigItem field value if set, zero value otherwise.
func (o *PromotionReportContent) GetConfigItem() string {
	if o == nil || IsNil(o.ConfigItem) {
		var ret string
		return ret
	}
	return *o.ConfigItem
}

// GetConfigItemOk returns a tuple with the ConfigItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionReportContent) GetConfigItemOk() (*string, bool) {
	if o == nil || IsNil(o.ConfigItem) {
		return nil, false
	}
	return o.ConfigItem, true
}

// HasConfigItem returns a boolean if a field has been set.
func (o *PromotionReportContent) HasConfigItem() bool {
	if o != nil && !IsNil(o.ConfigItem) {
		return true
	}

	return false
}

// SetConfigItem gets a reference to the given string and assigns it to the ConfigItem field.
func (o *PromotionReportContent) SetConfigItem(v string) {
	o.ConfigItem = &v
}

func (o PromotionReportContent) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PromotionReportContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConfigChange) {
		toSerialize["configChange"] = o.ConfigChange
	}
	if !IsNil(o.ConfigItem) {
		toSerialize["configItem"] = o.ConfigItem
	}
	return toSerialize, nil
}

type NullablePromotionReportContent struct {
	value *PromotionReportContent
	isSet bool
}

func (v NullablePromotionReportContent) Get() *PromotionReportContent {
	return v.value
}

func (v *NullablePromotionReportContent) Set(val *PromotionReportContent) {
	v.value = val
	v.isSet = true
}

func (v NullablePromotionReportContent) IsSet() bool {
	return v.isSet
}

func (v *NullablePromotionReportContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePromotionReportContent(val *PromotionReportContent) *NullablePromotionReportContent {
	return &NullablePromotionReportContent{value: val, isSet: true}
}

func (v NullablePromotionReportContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePromotionReportContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
