{
  "openapi": "3.0.3",
  "info": {
    "description": "## Introduction\nThe PingOne Advanced Identity Cloud REST API lets you manage your Advanced Identity Cloud tenants. The API exposes access management and identity management endpoints, with additional endpoints specific to Advanced Identity Cloud tenant environments.<br /><br />\nWe are now publishing the API spec in OpenAPI 3.0. For the legacy Swagger 2.0 spec, please download [swagger.yaml](swagger.yaml), but note that it may not contain all new functionality.<br /><br />\nFor full PingOne Advanced Identity Cloud documentation, please visit [the docs website](https://docs.pingidentity.com/pingoneaic/latest/).\n## Authenticating to the API\nThe PingOne Advanced Identity Cloud REST API has two different authentication methods:\n\n - [API key and secret](https://docs.pingidentity.com/pingoneaic/latest/developer-docs/authenticate-to-rest-api-with-api-key-and-secret.html): used for tenant read-only operations\n - [Access token](https://docs.pingidentity.com/pingoneaic/latest/developer-docs/authenticate-to-rest-api-with-access-token.html): used for access management operations, identity management operations or tenant write operations\n\nFor a summary of how to use these authentication methods, refer to [Authenticate to Advanced Identity Cloud REST API](https://docs.pingidentity.com/pingoneaic/latest/developer-docs/authenticate-to-rest-api-overview.html).\n",
    "title": "PingOne Advanced Identity Cloud API",
    "version": "",
    "x-logo": {
      "altText": "Ping Identity logo",
      "backgroundColor": "#FFFFFF",
      "url": "https://cdn-docs.pingidentity.com/navbar/ping-logo-horizontal.svg"
    }
  },
  "tags": [
    {
      "name": "Environment Secrets and Variables",
      "description": "Environment secrets and variables (ESVs) let you individually configure the development, staging, and production environments in your Advanced Identity Cloud tenant.\n"
    },
    {
      "name": "Variables",
      "description": "Variables are used to set configuration values that need to be different for each tenant environment. For example, an external service might need one URL in your development environment, but a different URL in your production environment.<br /><br />\nVariables are not versioned, and can be read back. They should not contain secrets.<br /><br />\nVariables are injected into Advanced Identity Cloud configuration when the underlying services are started or restarted.\n"
    },
    {
      "name": "Secrets",
      "description": "Secrets are used to set configuration values that need encrypting. The values may or may not need to be different for each tenant environment. Authorization passwords and authentication signing keys are examples of secrets that might exist in your configuration.<br /><br />\nSecrets can have multiple versions enabled to allow rotation, and once set they cannot be read back.<br /><br />\nSecrets are injected into Advanced Identity Cloud configuration when the underlying services are started or restarted.\n"
    },
    {
      "name": "Restart",
      "description": "A restart of Advanced Identity Cloud services is used when new variables or secrets have been created and need to be injected into Advanced Identity Cloud configuration."
    },
    {
      "name": "Count",
      "description": "Count is used to quickly identify how many variables and secrets are in an environment."
    },
    {
      "name": "Config Promotions",
      "description": "Advanced Identity Cloud lets you run self-service promotions to move configuration between a sequential pair of tenant environments.\n"
    },
    {
      "name": "Promotion",
      "description": "API endpoints related to self-service promotions\n"
    },
    {
      "name": "Environment Configuration",
      "description": "Advanced Identity Cloud gives you the ability to configure various environment settings via REST.\n"
    },
    {
      "name": "Certificates",
      "description": "Operations related to certificates"
    },
    {
      "name": "CSRs",
      "description": "Operations related to certificate signing requests"
    },
    {
      "name": "Content Security Policy",
      "description": "Operations related to content security policy"
    },
    {
      "name": "Cookie Domains",
      "description": "Operations related to cookie domains"
    },
    {
      "name": "Custom Domains",
      "description": "Operations related to custom domains"
    },
    {
      "name": "Federation Enforcement",
      "description": "Operations related to federation enforcement"
    },
    {
      "name": "Release",
      "description": "Operations related to release management"
    },
    {
      "name": "SSO Cookie",
      "description": "Operations related to single sign-on cookies"
    }
  ],
  "paths": {
    "/environment/certificates": {
      "get": {
        "description": "Returns all certificates installed in the tenant.",
        "operationId": "getCertificates",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Certificate"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:certificate:*",
              "fr:idc:certificate:read"
            ]
          }
        ],
        "summary": "Get all certificates",
        "tags": [
          "Certificates"
        ]
      },
      "post": {
        "description": "Upload a new certificate to the tenant.",
        "operationId": "createCertificate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCertificateRequest"
              }
            }
          },
          "description": "JSON body of the new certificate",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Certificate"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:certificate:*"
            ]
          }
        ],
        "summary": "Create certificate",
        "tags": [
          "Certificates"
        ]
      }
    },
    "/environment/certificates/{id}": {
      "delete": {
        "description": "Deletes a certificate installed on the tenant. This certificate must be disabled before deletion will be allowed.",
        "operationId": "deleteCertificateByID",
        "parameters": [
          {
            "description": "ID of the certificate resource",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:certificate:*"
            ]
          }
        ],
        "summary": "Delete certificate by ID",
        "tags": [
          "Certificates"
        ]
      },
      "get": {
        "description": "Returns information about a certificate installed on the tenant.",
        "operationId": "getCertificateByID",
        "parameters": [
          {
            "description": "ID of the certificate resource",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Certificate"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:certificate:*",
              "fr:idc:certificate:read"
            ]
          }
        ],
        "summary": "Get certificate by ID",
        "tags": [
          "Certificates"
        ]
      },
      "patch": {
        "description": "Updates information about a certificate installed on the tenant. This can be used to enable / disable certificates.",
        "operationId": "updateCertificateByID",
        "parameters": [
          {
            "description": "ID of the certificate resource",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCertificateRequest"
              }
            }
          },
          "description": "JSON body of the updated certificate",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Certificate"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:certificate:*"
            ]
          }
        ],
        "summary": "Update certificate by ID",
        "tags": [
          "Certificates"
        ]
      }
    },
    "/environment/content-security-policy/enforced": {
      "get": {
        "description": "Returns current enforced content security policy",
        "operationId": "getEnforcedContentSecurityPolicy",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSecurityPolicy"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:content-security-policy:*"
            ]
          }
        ],
        "summary": "Get enforced content security policy",
        "tags": [
          "Content Security Policy"
        ]
      },
      "put": {
        "description": "Specify enforced content security policy",
        "operationId": "setEnforcedContentSecurityPolicy",
        "requestBody": {
          "$ref": "#/components/requestBodies/ContentSecurityPolicy"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSecurityPolicy"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:content-security-policy:*"
            ]
          }
        ],
        "summary": "Set enforced content security policy",
        "tags": [
          "Content Security Policy"
        ]
      }
    },
    "/environment/content-security-policy/report-only": {
      "get": {
        "description": "Returns current report-only content security policy",
        "operationId": "getReportOnlyContentSecurityPolicy",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSecurityPolicy"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:content-security-policy:*"
            ]
          }
        ],
        "summary": "Get report-only content security policy",
        "tags": [
          "Content Security Policy"
        ]
      },
      "put": {
        "description": "Specify report-only content security policy",
        "operationId": "setReportOnlyContentSecurityPolicy",
        "requestBody": {
          "$ref": "#/components/requestBodies/ContentSecurityPolicy"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSecurityPolicy"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:content-security-policy:*"
            ]
          }
        ],
        "summary": "Set report-only content security policy",
        "tags": [
          "Content Security Policy"
        ]
      }
    },
    "/environment/cookie-domains": {
      "get": {
        "description": "Returns current cookie domains",
        "operationId": "getCookieDomains",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CookieDomains"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:cookie-domain:*"
            ]
          }
        ],
        "summary": "Get cookie domains",
        "tags": [
          "Cookie Domains"
        ]
      },
      "put": {
        "description": "Specify cookie domains",
        "operationId": "setCookieDomains",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CookieDomains"
              }
            }
          },
          "description": "Cookie domains",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CookieDomains"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:cookie-domain:*"
            ]
          }
        ],
        "summary": "Set cookie domains",
        "tags": [
          "Cookie Domains"
        ]
      }
    },
    "/environment/count": {
      "get": {
        "description": "Get count of ESV secrets and variables in the environment.",
        "operationId": "getCount",
        "parameters": [
          {
            "$ref": "#/components/parameters/esvApiVersion"
          },
          {
            "$ref": "#/components/parameters/esvOnlyPending"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvCount"
                }
              }
            },
            "description": "get count successful",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "error"
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:esv:*",
              "fr:idc:esv:read"
            ]
          }
        ],
        "summary": "Get count of ESVs",
        "tags": [
          "Count"
        ]
      }
    },
    "/environment/csrs": {
      "get": {
        "description": "Returns all certificate signing requests created in the environment",
        "operationId": "getCertificateSigningRequests",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CertificateSigningRequest"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:certificate:*",
              "fr:idc:certificate:read"
            ]
          }
        ],
        "summary": "Get all CSRs",
        "tags": [
          "CSRs"
        ]
      },
      "post": {
        "description": "Create a new certificate signing request",
        "operationId": "createCertificateSigningRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCertificateSigningRequestRequest"
              }
            }
          },
          "description": "JSON body of the new certificate signing request",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateSigningRequest"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:certificate:*"
            ]
          }
        ],
        "summary": "Create CSR",
        "tags": [
          "CSRs"
        ]
      }
    },
    "/environment/csrs/{id}": {
      "delete": {
        "description": "Deletes a CSR created in the tenant.",
        "operationId": "deleteCertificateSigningRequestById",
        "parameters": [
          {
            "description": "ID of the certificateSigningRequest",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:certificate:*"
            ]
          }
        ],
        "summary": "Delete CSR by ID",
        "tags": [
          "CSRs"
        ]
      },
      "get": {
        "description": "Returns information about a CSR created in the tenant.",
        "operationId": "getCertificateSigningRequestById",
        "parameters": [
          {
            "description": "ID of the CSR",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateSigningRequest"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:certificate:*",
              "fr:idc:certificate:read"
            ]
          }
        ],
        "summary": "Get CSR by ID",
        "tags": [
          "CSRs"
        ]
      },
      "patch": {
        "description": "Upload a certificate to complete a CSR request, installing the certificate in the tenant. Only the `certificate` field can be set on an upload request.",
        "operationId": "updateCertificateSigningRequestById",
        "parameters": [
          {
            "description": "ID of the certificateSigningRequest",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCertificateSigningRequestRequest"
              }
            }
          },
          "description": "JSON body of the new certificate signing request",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateSigningRequest"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:certificate:*"
            ]
          }
        ],
        "summary": "Update CSR by ID",
        "tags": [
          "CSRs"
        ]
      }
    },
    "/environment/custom-domains": {
      "post": {
        "description": "Verify a CNAME",
        "operationId": "verifyCustomDomains",
        "parameters": [
          {
            "description": "Requested action type",
            "in": "query",
            "name": "_action",
            "required": true,
            "schema": {
              "enum": [
                "verify"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CName"
              }
            }
          },
          "description": "Custom domain",
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:custom-domain:*"
            ]
          }
        ],
        "summary": "Verify a CNAME",
        "tags": [
          "Custom Domains"
        ]
      }
    },
    "/environment/custom-domains/{realm}": {
      "get": {
        "description": "Returns current custom domains",
        "operationId": "getCustomDomains",
        "parameters": [
          {
            "description": "Realm for the domain",
            "in": "path",
            "name": "realm",
            "required": true,
            "schema": {
              "enum": [
                "alpha",
                "bravo"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomDomains"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:custom-domain:*"
            ]
          }
        ],
        "summary": "Get custom domains",
        "tags": [
          "Custom Domains"
        ]
      },
      "put": {
        "description": "Specify custom domains",
        "operationId": "setCustomDomains",
        "parameters": [
          {
            "description": "Realm for the domain",
            "in": "path",
            "name": "realm",
            "required": true,
            "schema": {
              "enum": [
                "alpha",
                "bravo"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomDomains"
              }
            }
          },
          "description": "Custom domains",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomDomains"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:custom-domain:*"
            ]
          }
        ],
        "summary": "Set custom domains",
        "tags": [
          "Custom Domains"
        ]
      }
    },
    "/environment/federation/enforcement": {
      "get": {
        "description": "Returns current federation enforcement settings",
        "operationId": "getEnforcement",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FederationEnforcement"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:federation:*"
            ]
          }
        ],
        "summary": "Get enforcement of federation",
        "tags": [
          "Federation Enforcement"
        ]
      },
      "put": {
        "description": "Specify which admin groups are required to use federation",
        "operationId": "setEnforcement",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FederationEnforcement"
              }
            }
          },
          "description": "Enforcement settings to apply to the tenant",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FederationEnforcement"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:federation:*"
            ]
          }
        ],
        "summary": "Set enforcement of federation",
        "tags": [
          "Federation Enforcement"
        ]
      }
    },
    "/environment/promotion/lock": {
      "post": {
        "description": "Starts the lock process on the lower and upper environments",
        "operationId": "lock",
        "parameters": [
          {
            "description": "protocol=1.0,resource=1.0",
            "in": "header",
            "name": "Accept-API-Version",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/promotionStartLocking"
                }
              }
            },
            "description": "Lock has started on the environment",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/promotionConflictingLockState"
                }
              }
            },
            "description": "A promotion is already running",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "summary": "Lock environments",
        "tags": [
          "Promotion"
        ]
      }
    },
    "/environment/promotion/lock/{promotionId}": {
      "delete": {
        "description": "Start the unlock process on the lower and upper environments.",
        "operationId": "unlock",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/promotionId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/promotionUnlocked"
                }
              }
            },
            "description": "Environment is unlocked",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/promotionStartUnlocking"
                }
              }
            },
            "description": "Unlock has started on the environment",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/promotionConflictingLockState"
                }
              }
            },
            "description": "Environment is currently locking or unlocking",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "summary": "Unlock environments",
        "tags": [
          "Promotion"
        ]
      }
    },
    "/environment/promotion/lock/state": {
      "get": {
        "description": "Get the lock status of the lower and upper environments.",
        "operationId": "check-lock",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "allowEmptyValue": true,
            "description": "If set to true this parameter will only return the lock status of the environment the request is aimed at",
            "in": "query",
            "name": "localLockOnly",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/promotionLockState"
                }
              }
            },
            "description": "Current status of lock on the environment",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "summary": "Get lock status",
        "tags": [
          "Promotion"
        ]
      }
    },
    "/environment/promotion/promote": {
      "get": {
        "description": "Get the status of a promotion, if one is in progress.\n",
        "operationId": "progress",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/promotionProgress"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "summary": "Get promotion status",
        "tags": [
          "Promotion"
        ]
      },
      "post": {
        "description": "Promote configuration from the lower environment to the upper environment.",
        "operationId": "start",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/promotionRequest"
              }
            }
          },
          "description": "A request body with info required to initiate a promotion",
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/promotionStart"
                }
              }
            },
            "description": "Promotion process started successfully",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Promotion request is conflicting with the current state of the environment. For example, the environment is not locked, or a promotion or rollback is already running.\n",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "Run a promotion",
        "tags": [
          "Promotion"
        ]
      }
    },
    "/environment/promotion/report": {
      "get": {
        "description": "This will return the contents of the last run config promotion report",
        "operationId": "getLastReport",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/promotionReport"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "Get last promotion report",
        "tags": [
          "Promotion"
        ]
      }
    },
    "/environment/promotion/report/{reportId}": {
      "get": {
        "description": "Get a specific promotion report.",
        "operationId": "getReport",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/reportId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/promotionReport"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "report not found for given id",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "summary": "Get a promotion report",
        "tags": [
          "Promotion"
        ]
      }
    },
    "/environment/promotion/report/provisional": {
      "get": {
        "description": "Get a provisional report of changes since the last time the lower environment was promoted to the upper environment. The report generated is for informational purposes only and may not reflect all the changes in a full promotion. A dry-run promotion is always recommended prior to a full promotion between environments.\n",
        "operationId": "getProvisionalReport",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/promotionReport"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "summary": "Get a provisional promotion report",
        "tags": [
          "Promotion"
        ]
      }
    },
    "/environment/promotion/report/provisional-rollback": {
      "get": {
        "description": "Get a provisional rollback report of changes when we rollback the configuration to the previous promotion.\n",
        "operationId": "getProvisionalRollbackReport",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/promotionReport"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "summary": "Get a provisional rollback report",
        "tags": [
          "Promotion"
        ]
      }
    },
    "/environment/promotion/reports": {
      "get": {
        "description": "Get a list of previous promotion reports in date order.",
        "operationId": "getReportList",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/promotionReportList"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "summary": "Get promotion reports",
        "tags": [
          "Promotion"
        ]
      }
    },
    "/environment/promotion/rollback": {
      "post": {
        "description": "Rollback the most recent configuration promotion.",
        "operationId": "rollback",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/rollbackRequest"
              }
            }
          },
          "description": "A request body with info required to initiate a rollback",
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rollbackStart"
                }
              }
            },
            "description": "Rollback process started successfully",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Rollback request is conflicting with the current state of the environment. For example, the environment is not locked, or a promotion or rollback is already running.\n",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "summary": "Rollback a promotion",
        "tags": [
          "Promotion"
        ]
      }
    },
    "/environment/release": {
      "get": {
        "description": "Get release information",
        "operationId": "getReleaseInfo",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Release"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:release:*"
            ]
          }
        ],
        "summary": "Get release information",
        "tags": [
          "Release"
        ]
      }
    },
    "/environment/secrets": {
      "get": {
        "description": "Get all secrets, but not their secret versions or secret version values.",
        "operationId": "getAllSecrets",
        "parameters": [
          {
            "$ref": "#/components/parameters/esvApiVersion"
          },
          {
            "$ref": "#/components/parameters/esvPageSize"
          },
          {
            "$ref": "#/components/parameters/esvPagedResultsCookie"
          },
          {
            "$ref": "#/components/parameters/esvPagedResultsOffset"
          },
          {
            "$ref": "#/components/parameters/esvOnlyPending"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvSecretsListResponse"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:esv:*",
              "fr:idc:esv:read"
            ]
          }
        ],
        "summary": "Get all secrets",
        "tags": [
          "Secrets"
        ]
      }
    },
    "/environment/secrets/{secretId}": {
      "delete": {
        "description": "Delete a secret and all its secret versions and secret version values.",
        "operationId": "deleteSecret",
        "parameters": [
          {
            "$ref": "#/components/parameters/esvApiVersion"
          },
          {
            "description": "ID of the secret",
            "in": "path",
            "name": "secretId",
            "required": true,
            "schema": {
              "pattern": "^esv-[a-z0-9_-]{1,124}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvSecretResponse"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:esv:*",
              "fr:idc:esv:update"
            ]
          }
        ],
        "summary": "Delete a secret",
        "tags": [
          "Secrets"
        ]
      },
      "get": {
        "description": "Get a secret, but not its secret versions or secret version values.",
        "operationId": "getSecret",
        "parameters": [
          {
            "$ref": "#/components/parameters/esvApiVersion"
          },
          {
            "description": "ID of the secret",
            "in": "path",
            "name": "secretId",
            "required": true,
            "schema": {
              "pattern": "^esv-[a-z0-9_-]{1,124}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvSecretResponse"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:esv:*",
              "fr:idc:esv:read"
            ]
          }
        ],
        "summary": "Get a secret",
        "tags": [
          "Secrets"
        ]
      },
      "post": {
        "operationId": "actionSecret",
        "parameters": [
          {
            "description": "ID of the secret",
            "in": "path",
            "name": "secretId",
            "required": true,
            "schema": {
              "pattern": "^esv-[a-z0-9_-]{1,124}$",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "_action",
            "required": true,
            "schema": {
              "enum": [
                "setDescription"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/esvSetDescriptionRequest"
              }
            }
          },
          "description": "The description of this secret",
          "required": true
        },
        "responses": {
          "200": {
            "content": {},
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:esv:*",
              "fr:idc:esv:update"
            ]
          }
        ],
        "summary": "Set a secret description",
        "tags": [
          "Secrets"
        ]
      },
      "put": {
        "description": "Create a secret and its first secret version.",
        "operationId": "createSecret",
        "parameters": [
          {
            "$ref": "#/components/parameters/esvApiVersion"
          },
          {
            "description": "ID of the secret",
            "in": "path",
            "name": "secretId",
            "required": true,
            "schema": {
              "pattern": "^esv-[a-z0-9_-]{1,124}$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/esvSecretCreateRequest"
              }
            }
          },
          "description": "JSON body of the new secret",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvSecretResponse"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:esv:*",
              "fr:idc:esv:update"
            ]
          }
        ],
        "summary": "Create a secret",
        "tags": [
          "Secrets"
        ]
      }
    },
    "/environment/secrets/{secretId}/versions": {
      "get": {
        "description": "Get all versions and version metadata of a secret. It is not possible to view the secret values.\n",
        "operationId": "getSecretVersions",
        "parameters": [
          {
            "$ref": "#/components/parameters/esvApiVersion"
          },
          {
            "description": "ID of the secret",
            "in": "path",
            "name": "secretId",
            "required": true,
            "schema": {
              "pattern": "^esv-[a-z0-9_-]{1,124}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/esvSecretVersionResponse"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:esv:*",
              "fr:idc:esv:read"
            ]
          }
        ],
        "summary": "Get all versions of a secret",
        "tags": [
          "Secrets"
        ]
      },
      "post": {
        "operationId": "createSecretVersion",
        "parameters": [
          {
            "$ref": "#/components/parameters/esvApiVersion"
          },
          {
            "description": "Can only be create",
            "in": "query",
            "name": "_action",
            "required": true,
            "schema": {
              "enum": [
                "create"
              ],
              "type": "string"
            }
          },
          {
            "description": "ID of the secret",
            "in": "path",
            "name": "secretId",
            "required": true,
            "schema": {
              "pattern": "^esv-[a-z0-9_-]{1,124}$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/esvSecretVersionCreateRequest"
              }
            }
          },
          "description": "JSON body of the new secret version",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvSecretVersionResponse"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:esv:*",
              "fr:idc:esv:update"
            ]
          }
        ],
        "summary": "Create a new version of a secret",
        "tags": [
          "Secrets"
        ]
      }
    },
    "/environment/secrets/{secretId}/versions/{versionId}": {
      "delete": {
        "operationId": "deleteSecretVersion",
        "parameters": [
          {
            "$ref": "#/components/parameters/esvApiVersion"
          },
          {
            "description": "ID of the secret",
            "in": "path",
            "name": "secretId",
            "required": true,
            "schema": {
              "pattern": "^esv-[a-z0-9_-]{1,124}$",
              "type": "string"
            }
          },
          {
            "description": "ID of the secret version",
            "in": "path",
            "name": "versionId",
            "required": true,
            "schema": {
              "pattern": "^latest$|^[0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvSecretVersionResponse"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:esv:*",
              "fr:idc:esv:update"
            ]
          }
        ],
        "summary": "Delete a version of a secret",
        "tags": [
          "Secrets"
        ]
      },
      "get": {
        "description": "Get a version and version metadata of a secret. It is not possible to view the secret value.",
        "operationId": "getSecretVersion",
        "parameters": [
          {
            "$ref": "#/components/parameters/esvApiVersion"
          },
          {
            "description": "ID of the secret",
            "in": "path",
            "name": "secretId",
            "required": true,
            "schema": {
              "pattern": "^esv-[a-z0-9_-]{1,124}$",
              "type": "string"
            }
          },
          {
            "description": "ID of the secret version",
            "in": "path",
            "name": "versionId",
            "required": true,
            "schema": {
              "pattern": "^latest$|^[0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvSecretVersionResponse"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:esv:*",
              "fr:idc:esv:read"
            ]
          }
        ],
        "summary": "Get a version of a secret",
        "tags": [
          "Secrets"
        ]
      },
      "post": {
        "description": "Update the status of a version of a secret to either ENABLED or DISABLED. The latest version of a secret cannot be updated to a status of DISABLED.",
        "operationId": "changeSecretVersion",
        "parameters": [
          {
            "$ref": "#/components/parameters/esvApiVersion"
          },
          {
            "description": "Can only be changestatus",
            "in": "query",
            "name": "_action",
            "required": true,
            "schema": {
              "enum": [
                "changestatus"
              ],
              "type": "string"
            }
          },
          {
            "description": "ID of the secret",
            "in": "path",
            "name": "secretId",
            "required": true,
            "schema": {
              "pattern": "^esv-[a-z0-9_-]{1,124}$",
              "type": "string"
            }
          },
          {
            "description": "ID of the secret version",
            "in": "path",
            "name": "versionId",
            "required": true,
            "schema": {
              "pattern": "^latest$|^[0-9]+$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/esvSecretVersionStatusRequest"
              }
            }
          },
          "description": "JSON body of the new status of the secret version",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvSecretVersionResponse"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:esv:*",
              "fr:idc:esv:update"
            ]
          }
        ],
        "summary": "Update the status of a version of a secret",
        "tags": [
          "Secrets"
        ]
      }
    },
    "/environment/sso-cookie": {
      "get": {
        "description": "Returns current SSO cookie configuration",
        "operationId": "getSSOCookie",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SSOCookie"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:sso-cookie:*"
            ]
          }
        ],
        "summary": "Get SSO cookie configuration",
        "tags": [
          "SSO Cookie"
        ]
      },
      "post": {
        "description": "Reset SSO cookie configuration to default",
        "operationId": "resetSSOCookie",
        "parameters": [
          {
            "description": "Reset SSO cookie configuration to default",
            "in": "query",
            "name": "_action",
            "required": true,
            "schema": {
              "enum": [
                "reset"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SSOCookie"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:sso-cookie:*"
            ]
          }
        ],
        "summary": "Reset SSO cookie configuration",
        "tags": [
          "SSO Cookie"
        ]
      },
      "put": {
        "description": "Specify SSO cookie configuration",
        "operationId": "setSSOCookie",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SSOCookie"
              }
            }
          },
          "description": "SSO cookie configuration to apply to the tenant",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SSOCookie"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Invalid token",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              },
              "X-ForgeRock-TransactionId": {
                "description": "Identifies a specific transaction (API call)",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:sso-cookie:*"
            ]
          }
        ],
        "summary": "Set SSO cookie configuration",
        "tags": [
          "SSO Cookie"
        ]
      }
    },
    "/environment/startup": {
      "get": {
        "description": "Get restart status indicating whether any upgrade or rollout restart is taking place on Advanced Identity Cloud services.",
        "operationId": "getRestartStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/esvApiVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvRestartStatus"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "failed operation"
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:esv:*",
              "fr:idc:esv:read"
            ]
          }
        ],
        "summary": "Get restart status",
        "tags": [
          "Restart"
        ]
      },
      "post": {
        "description": "Initiate restart of Advanced Identity Cloud services. This will inject any new variables or secrets into Advanced Identity Cloud configuration.",
        "operationId": "restart",
        "parameters": [
          {
            "$ref": "#/components/parameters/esvApiVersion"
          },
          {
            "description": "Can only be restart",
            "in": "query",
            "name": "_action",
            "required": true,
            "schema": {
              "enum": [
                "restart"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvRestartStatus"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:esv:*",
              "fr:idc:esv:restart"
            ]
          }
        ],
        "summary": "Initiate restart",
        "tags": [
          "Restart"
        ]
      }
    },
    "/environment/variables": {
      "get": {
        "operationId": "getAllVariables",
        "parameters": [
          {
            "$ref": "#/components/parameters/esvApiVersion"
          },
          {
            "$ref": "#/components/parameters/esvPageSize"
          },
          {
            "$ref": "#/components/parameters/esvPagedResultsCookie"
          },
          {
            "$ref": "#/components/parameters/esvPagedResultsOffset"
          },
          {
            "$ref": "#/components/parameters/esvOnlyPending"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/esvVariableListV1"
                    },
                    {
                      "$ref": "#/components/schemas/esvVariableListV2"
                    }
                  ]
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:esv:*",
              "fr:idc:esv:read"
            ]
          }
        ],
        "summary": "Get all variables",
        "tags": [
          "Variables"
        ]
      }
    },
    "/environment/variables/{variableId}": {
      "delete": {
        "operationId": "deleteVariable",
        "parameters": [
          {
            "$ref": "#/components/parameters/esvApiVersion"
          },
          {
            "description": "ID of the variable",
            "in": "path",
            "name": "variableId",
            "required": true,
            "schema": {
              "pattern": "^esv-[a-z0-9_-]{1,124}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvVariableResponse"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:esv:*",
              "fr:idc:esv:update"
            ]
          }
        ],
        "summary": "Delete a variable",
        "tags": [
          "Variables"
        ]
      },
      "get": {
        "operationId": "getVariable",
        "parameters": [
          {
            "$ref": "#/components/parameters/esvApiVersion"
          },
          {
            "description": "ID of the variable",
            "in": "path",
            "name": "variableId",
            "required": true,
            "schema": {
              "pattern": "^esv-[a-z0-9_-]{1,124}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvVariableResponse"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:esv:*",
              "fr:idc:esv:read"
            ]
          }
        ],
        "summary": "Get a variable",
        "tags": [
          "Variables"
        ]
      },
      "post": {
        "operationId": "actionVariable",
        "parameters": [
          {
            "$ref": "#/components/parameters/esvApiVersion"
          },
          {
            "description": "ID of the variable",
            "in": "path",
            "name": "variableId",
            "required": true,
            "schema": {
              "pattern": "^esv-[a-z0-9_-]{1,124}$",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "_action",
            "required": true,
            "schema": {
              "enum": [
                "setDescription"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/esvSetDescriptionRequest"
              }
            }
          },
          "description": "The description of this variable",
          "required": true
        },
        "responses": {
          "200": {
            "content": {},
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:esv:*",
              "fr:idc:esv:update"
            ]
          }
        ],
        "summary": "Set a variable description",
        "tags": [
          "Variables"
        ]
      },
      "put": {
        "description": "Create or update a variable using a predefined name. Once created, a variable name cannot be changed.\n",
        "operationId": "createVariables",
        "parameters": [
          {
            "$ref": "#/components/parameters/esvApiVersion"
          },
          {
            "description": "ID of the variable",
            "in": "path",
            "name": "variableId",
            "required": true,
            "schema": {
              "pattern": "^esv-[a-z0-9_-]{1,124}$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/esvVariableCreateUpdateRequest"
              }
            }
          },
          "description": "JSON body of the new variable",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvVariableResponse"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Content-API-Version": {
                "description": "resource=1.0",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/esvError"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "security": [
          {
            "OAuth2": [
              "fr:idc:esv:*",
              "fr:idc:esv:update"
            ]
          }
        ],
        "summary": "Create or update a variable",
        "tags": [
          "Variables"
        ]
      }
    }
  },
  "security": [
    {
      "OAuth2": [
        "fr:idm:*",
        "fr:idc:esv:*",
        "fr:idc:esv:read",
        "fr:idc:esv:update",
        "fr:idc:esv:restart",
        "fr:idc:promotion:*"
      ]
    }
  ],
  "servers": [
    {
      "url": "https://openam-example.id.forgerock.io"
    }
  ],
  "components": {
    "parameters": {
      "PageCookie": {
        "description": "Opaque data used for paging result data, can be used for paging instead of having to track pageSize and pagedResultsOffset",
        "in": "query",
        "name": "_pagedResultsCookie",
        "schema": {
          "type": "string"
        }
      },
      "PageOffset": {
        "description": "Offset of the first result to be returned by endpoint",
        "in": "query",
        "name": "_pagedResultsOffset",
        "schema": {
          "default": 0,
          "minimum": 0,
          "type": "integer"
        }
      },
      "PageSize": {
        "description": "Maximum number of results returned by endpoint before paging",
        "in": "query",
        "name": "_pageSize",
        "schema": {
          "default": 25,
          "maximum": 100,
          "minimum": 1,
          "type": "integer"
        }
      },
      "X-ForgeRock-TransactionId": {
        "description": "Permits setting a specific transaction ID for this request",
        "in": "header",
        "name": "ForgeRock-Transaction-ID",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "apiVersion": {
        "description": "protocol=1.0,resource=1.0",
        "in": "header",
        "name": "Accept-API-Version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "esvApiVersion": {
        "description": "resource=2.0",
        "in": "header",
        "name": "Accept-API-Version",
        "schema": {
          "type": "string"
        }
      },
      "esvOnlyPending": {
        "description": "_Accept-API-Version: resource=2.0_ only, returns ESVs with unapplied changes",
        "in": "query",
        "name": "_onlyPending",
        "schema": {
          "default": false,
          "type": "boolean"
        }
      },
      "esvPageSize": {
        "description": "_Accept-API-Version: resource=2.0_ only, maximum number of results returned by endpoint before paging",
        "in": "query",
        "name": "_pageSize",
        "required": false,
        "schema": {
          "default": 25,
          "maximum": 100,
          "minimum": 1,
          "type": "integer"
        }
      },
      "esvPagedResultsCookie": {
        "description": "_Accept-API-Version: resource=2.0_ only, opaque data used for paging result data, can be used for paging instead of having to track pageSize and pagedResultsOffset",
        "in": "query",
        "name": "_pagedResultsCookie",
        "required": false,
        "schema": {
          "default": "",
          "type": "string"
        }
      },
      "esvPagedResultsOffset": {
        "description": "_Accept-API-Version: resource=2.0_ only, offset of the first result to be returned by endpoint",
        "in": "query",
        "name": "_pagedResultsOffset",
        "required": false,
        "schema": {
          "default": 0,
          "minimum": 0,
          "type": "integer"
        }
      },
      "promotionId": {
        "description": "Promotion unique identifier",
        "in": "path",
        "name": "promotionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "reportId": {
        "description": "Promotion report unique identifier",
        "in": "path",
        "name": "reportId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {},
    "securitySchemes": {
      "OAuth2": {
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://example.com/oauth/authorize",
            "scopes": {
              "fr:idc:certificate:*": "Full access to certificates configuration",
              "fr:idc:certificate:read": "Read only access to certificates configuration",
              "fr:idc:content-security-policy:*": "Full access to content security policy configuration",
              "fr:idc:custom-domain:*": "Full access to custom domains configuration",
              "fr:idc:esv:*": "Full ESV access",
              "fr:idc:esv:read": "Read ESVs",
              "fr:idc:esv:restart": "Perform a restart of the ID Cloud workloads",
              "fr:idc:esv:update": "Modify or delete ESVs",
              "fr:idc:federation:*": "Full access to federation configuration",
              "fr:idc:promotion:*": "Allows a user to trigger a promotion",
              "fr:idc:release:*": "Full access to release configuration",
              "fr:idc:sso-cookie:*": "Full access to SSO cookie configuration",
              "fr:idm:*": "Grants full ESV access if user has openidm-admin role"
            },
            "tokenUrl": "https://example.com/oauth/token"
          }
        },
        "type": "oauth2"
      }
    },
    "schemas": {
      "BadRequest": {
        "properties": {
          "code": {
            "example": 400,
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CName": {
        "properties": {
          "name": {
            "description": "The canonical name of the domain to be validated.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "Certificate": {
        "properties": {
          "active": {
            "description": "The active status of the certificate. Set this to true for the certificate to be made live on the loadbalancer.",
            "type": "boolean",
            "x-omitempty": false
          },
          "certificate": {
            "description": "Deprecated. Contains no data.",
            "type": "string",
            "x-go-custom-tag": "datastore:\",noindex\""
          },
          "expireTime": {
            "description": "The expiry time of the certificate. Not used in insert requests.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the certificate resource. Not used in insert requests.",
            "type": "string"
          },
          "issuer": {
            "description": "The issuer DN of the certificate",
            "type": "string"
          },
          "live": {
            "description": "The live status of the certificate. This is automatically set by the system and indicates if the certificate is currently live externally.",
            "type": "boolean",
            "x-omitempty": false
          },
          "subject": {
            "description": "The subject DN of the certificate",
            "type": "string"
          },
          "subjectAlternativeNames": {
            "description": "Domains associated by with the certificate via the Subject Alternative Name extension. The common name should be included in the SANs as well. Not used in insert requests.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "validFromTime": {
            "description": "The notBefore time of the certificate.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CertificateSigningRequest": {
        "properties": {
          "algorithm": {
            "description": "The algorithm for the private key. The encryption algorithm will either be RSA-2048 or ECDSA P-256 depending on the algorithm choice. The default is RSA-2048.",
            "type": "string"
          },
          "certificateID": {
            "description": "The ID of the certificate created from this CSR if the CSR has been completed.",
            "type": "string"
          },
          "createdDate": {
            "example": "2006-01-02T15:04:05Z07:00",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the CSR",
            "type": "string"
          },
          "request": {
            "description": "PEM formatted CSR.",
            "type": "string",
            "x-go-custom-tag": "datastore:\",noindex\""
          },
          "subject": {
            "description": "the CSR subject",
            "type": "string"
          },
          "subjectAlternativeNames": {
            "description": "Additional domain or domains that the SSL certificate is securing",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Conflict": {
        "properties": {
          "code": {
            "example": 409,
            "type": "integer"
          },
          "message": {
            "example": "conflict",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContentSecurityPolicy": {
        "properties": {
          "active": {
            "type": "boolean",
            "x-omitempty": false
          },
          "directives": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "object",
            "x-omitempty": false
          }
        },
        "type": "object"
      },
      "CookieDomains": {
        "properties": {
          "domains": {
            "description": "Cookie domains",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreateCertificateRequest": {
        "properties": {
          "active": {
            "description": "The active status of the certificate. Set this to true for the certificate to actively be served.",
            "type": "boolean"
          },
          "certificate": {
            "description": "The PEM formatted certificate.",
            "type": "string"
          },
          "privateKey": {
            "description": "The private key for the certificate. For security reasons, only insert requests include this field.",
            "type": "string"
          }
        },
        "required": [
          "certificate",
          "privateKey"
        ],
        "type": "object"
      },
      "CreateCertificateSigningRequestRequest": {
        "default": {
          "algorithm": "rsa",
          "subjectAlternativeNames": []
        },
        "properties": {
          "algorithm": {
            "description": "The algorithm for the private key. The encryption algorithm will either be RSA-2048 or ECDSA P-256 depending on the algorithm choice. The default is RSA-2048.",
            "enum": [
              "rsa",
              "ecdsa"
            ],
            "type": "string"
          },
          "businessCategory": {
            "description": "Category of business, such as \"Private Organization\", “Government Entity”, “Business Entity”, or “Non-Commercial Entity”. Relevant for EV certificates.",
            "example": "Private Organization",
            "type": "string"
          },
          "city": {
            "example": "Los Angeles",
            "type": "string"
          },
          "commonName": {
            "description": "Domain name that the SSL certificate is securing",
            "example": "id.example.com",
            "type": "string"
          },
          "country": {
            "description": "Two-letter ISO-3166 country code",
            "example": "US",
            "pattern": "[A-Z]{2}",
            "type": "string"
          },
          "email": {
            "example": "bob@example.com",
            "pattern": "^\\S+@\\S+$",
            "type": "string"
          },
          "jurisdictionCity": {
            "description": "This field contains only information relevant to the Jurisdiction of Incorporation or Registration. Relevant for EV certificates.",
            "example": "Los Angeles",
            "type": "string"
          },
          "jurisdictionCountry": {
            "description": "This field contains only information relevant to the Jurisdiction of Incorporation or Registration. Relevant for EV certificates.",
            "example": "US",
            "type": "string"
          },
          "jurisdictionState": {
            "description": "This field contains only information relevant to the Jurisdiction of Incorporation or Registration. Relevant for EV certificates.",
            "example": "California",
            "type": "string"
          },
          "organization": {
            "description": "Full name of company",
            "example": "example",
            "type": "string"
          },
          "organizationalUnit": {
            "description": "Company section or department",
            "example": "business",
            "type": "string"
          },
          "postalCode": {
            "example": "94105",
            "type": "string"
          },
          "serialNumber": {
            "description": "The Registration (or similar) Number assigned to the Subject by the Incorporating or Registration Agency in its Jurisdiction of Incorporation or Registration. Relevant for EV certificates.",
            "example": "1234567",
            "type": "string"
          },
          "state": {
            "example": "California",
            "type": "string"
          },
          "streetAddress": {
            "example": "Nice Street",
            "type": "string"
          },
          "subjectAlternativeNames": {
            "description": "Additional domain or domains that the SSL certificate is securing",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CustomDomains": {
        "properties": {
          "domains": {
            "description": "Custom domains",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Error": {
        "properties": {
          "code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "FederationEnforcement": {
        "properties": {
          "groups": {
            "enum": [
              "none",
              "non-global",
              "all"
            ],
            "type": "string"
          }
        },
        "required": [
          "groups"
        ],
        "type": "object"
      },
      "Forbidden": {
        "properties": {
          "code": {
            "example": 403,
            "type": "integer"
          },
          "message": {
            "example": "forbidden",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InternalServerError": {
        "properties": {
          "code": {
            "example": 500,
            "type": "integer"
          },
          "message": {
            "example": "something unexpected happened",
            "type": "string"
          },
          "status": {
            "example": "Internal Server Error",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NotFound": {
        "properties": {
          "code": {
            "example": 404,
            "type": "integer"
          },
          "message": {
            "example": "not found",
            "type": "string"
          }
        },
        "type": "object"
      },
      "P1Connect": {
        "properties": {
          "active": {
            "type": "boolean"
          },
          "adminClientId": {
            "type": "string"
          },
          "defaultIssuer": {
            "type": "string"
          },
          "idpAuthEndpoint": {
            "type": "string"
          },
          "idpClientId": {
            "type": "string"
          },
          "idpEnabled": {
            "type": "boolean"
          },
          "idpIssuer": {
            "type": "string"
          },
          "idpTokenEndpoint": {
            "type": "string"
          },
          "idpWellKnownEndpoint": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "P1ConnectConfigureRequest": {
        "properties": {
          "adminDiscoveryEndpoint": {
            "description": "The OIDC well-known endpoint for the PingOne environment where admin identities exist",
            "format": "uri",
            "type": "string"
          },
          "consumerDiscoveryEndpoint": {
            "description": "The OIDC well-known endpoint for the PingOne consumer environment being linked",
            "format": "uri",
            "type": "string"
          },
          "pingOneAdminJwksEndpoint": {
            "description": "The JWKS endpoint for the dynamically-registered admin client",
            "format": "uri",
            "type": "string"
          },
          "ssoAppId": {
            "description": "The client ID to use in the PingOne IDP definition for SSO",
            "type": "string"
          }
        },
        "required": [
          "adminDiscoveryEndpoint",
          "consumerDiscoveryEndpoint",
          "pingOneAdminJwksEndpoint",
          "ssoAppId"
        ],
        "type": "object"
      },
      "P1ConnectConfigureResponse": {
        "properties": {
          "adminClientId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "P1Connects": {
        "items": {
          "$ref": "#/components/schemas/P1Connect"
        },
        "type": "array"
      },
      "Release": {
        "properties": {
          "currentVersion": {
            "type": "string"
          },
          "nextUpgrade": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SSOCookie": {
        "properties": {
          "name": {
            "pattern": "^[a-zA-Z0-9]{1,32}$",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "Unauthorized": {
        "properties": {
          "code": {
            "example": 401,
            "type": "integer"
          },
          "message": {
            "example": "unauthorized",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateCertificateRequest": {
        "properties": {
          "active": {
            "description": "The active status of the certificate. Set this to true for the certificate to actively be served.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "UpdateCertificateSigningRequestRequest": {
        "properties": {
          "certificate": {
            "description": "The matching signed certificate for the request. This should only be set on update requests to upload the certificate.",
            "type": "string"
          }
        },
        "required": [
          "certificate"
        ],
        "type": "object"
      },
      "default": {
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "esvCount": {
        "properties": {
          "secrets": {
            "example": 10,
            "type": "integer"
          },
          "variables": {
            "example": 0,
            "type": "integer"
          }
        },
        "required": [
          "secrets",
          "variables"
        ],
        "type": "object"
      },
      "esvError": {
        "properties": {
          "code": {
            "example": 401,
            "type": "integer"
          },
          "message": {
            "example": "unauthorized",
            "type": "string"
          }
        },
        "required": [
          "message",
          "code"
        ],
        "type": "object"
      },
      "esvRestartStatus": {
        "properties": {
          "restartStatus": {
            "enum": [
              "restarting",
              "ready"
            ],
            "example": "restarting",
            "type": "string"
          }
        },
        "required": [
          "restartStatus"
        ],
        "type": "object"
      },
      "esvSecretCreateRequest": {
        "properties": {
          "description": {
            "example": "My secret",
            "maxLength": 1000,
            "type": "string"
          },
          "encoding": {
            "enum": [
              "generic",
              "pem",
              "base64hmac",
              "base64aes"
            ],
            "example": "generic",
            "type": "string"
          },
          "useInPlaceholders": {
            "type": "boolean"
          },
          "valueBase64": {
            "example": "ZGF0YQ==",
            "format": "byte",
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string"
          }
        },
        "required": [
          "encoding",
          "useInPlaceholders",
          "valueBase64"
        ],
        "type": "object"
      },
      "esvSecretResponse": {
        "properties": {
          "_id": {
            "example": "esv-mysecret1",
            "type": "string"
          },
          "activeVersion": {
            "example": "1",
            "type": "string"
          },
          "description": {
            "example": "My secret",
            "type": "string"
          },
          "encoding": {
            "example": "generic",
            "type": "string"
          },
          "lastChangeDate": {
            "example": "1999-12-31T23:59:59Z",
            "format": "date-time",
            "type": "string"
          },
          "lastChangedBy": {
            "example": "bjensen",
            "type": "string"
          },
          "loaded": {
            "type": "boolean"
          },
          "loadedVersion": {
            "example": "1",
            "type": "string"
          },
          "useInPlaceholders": {
            "type": "boolean"
          }
        },
        "required": [
          "_id",
          "activeVersion",
          "description",
          "encoding",
          "lastChangeDate",
          "lastChangedBy",
          "loaded",
          "loadedVersion",
          "useInPlaceholders"
        ],
        "type": "object"
      },
      "esvSecretVersionCreateRequest": {
        "properties": {
          "valueBase64": {
            "example": "ZGF0YQ==",
            "format": "byte",
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string"
          }
        },
        "required": [
          "valueBase64"
        ],
        "type": "object"
      },
      "esvSecretVersionResponse": {
        "properties": {
          "createDate": {
            "example": "1999-12-31T23:59:59Z",
            "format": "date-time",
            "type": "string"
          },
          "loaded": {
            "example": false,
            "type": "boolean"
          },
          "status": {
            "example": "DISABLED",
            "type": "string"
          },
          "version": {
            "example": "latest",
            "pattern": "^latest$|^[0-9]+$",
            "type": "string"
          }
        },
        "required": [
          "version",
          "createDate",
          "loaded",
          "status"
        ],
        "type": "object"
      },
      "esvSecretVersionStatusRequest": {
        "properties": {
          "status": {
            "enum": [
              "DISABLED",
              "ENABLED"
            ],
            "example": "DISABLED",
            "type": "string"
          }
        },
        "required": [
          "status"
        ],
        "type": "object"
      },
      "esvSecretsListResponse": {
        "properties": {
          "pagedResultsCookie": {
            "example": "null",
            "nullable": true,
            "type": "string"
          },
          "remainingPagedResults": {
            "example": 0,
            "type": "integer"
          },
          "result": {
            "items": {
              "$ref": "#/components/schemas/esvSecretResponse"
            },
            "type": "array"
          },
          "resultCount": {
            "example": 4,
            "type": "integer"
          },
          "totalPagedResults": {
            "example": 1,
            "type": "integer"
          },
          "totalPagedResultsPolicy": {
            "type": "string"
          }
        },
        "required": [
          "result",
          "resultCount",
          "pagedResultsCookie",
          "totalPagedResultsPolicy",
          "totalPagedResults",
          "remainingPagedResults"
        ],
        "type": "object"
      },
      "esvSetDescriptionRequest": {
        "properties": {
          "description": {
            "example": "My secret",
            "maxLength": 1000,
            "type": "string"
          }
        },
        "required": [
          "description"
        ],
        "type": "object"
      },
      "esvVariableCreateUpdateRequest": {
        "properties": {
          "description": {
            "example": "My variable",
            "maxLength": 1000,
            "type": "string"
          },
          "expressionType": {
            "enum": [
              "string",
              "list",
              "array",
              "object",
              "bool",
              "int",
              "number",
              "base64encodedinlined",
              "keyvaluelist"
            ],
            "example": "array",
            "type": "string"
          },
          "valueBase64": {
            "example": "ZGF0YQ==",
            "format": "byte",
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string"
          }
        },
        "required": [
          "valueBase64"
        ],
        "type": "object"
      },
      "esvVariableListV1": {
        "description": "Variable list response when requested with empty Accept-API-Version or Accept-API-Version: resource=1.0",
        "properties": {
          "pagedResultsCookie": {
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "remainingPagedResults": {
            "example": 0,
            "type": "integer"
          },
          "result": {
            "items": {
              "$ref": "#/components/schemas/esvVariableResponse"
            },
            "type": "array"
          },
          "resultCount": {
            "example": 4,
            "type": "integer"
          },
          "totalPagedResults": {
            "example": 1,
            "type": "integer"
          },
          "totalPagedResultsPolicy": {
            "type": "string"
          }
        },
        "required": [
          "result",
          "resultCount",
          "pagedResultsCookie",
          "totalPagedResultsPolicy",
          "totalPagedResults",
          "remainingPagedResults"
        ],
        "type": "object"
      },
      "esvVariableListV2": {
        "description": "Variable list response when requested with Accept-API-Version: resource=2.0",
        "properties": {
          "pagedResultsCookie": {
            "example": null,
            "nullable": true,
            "type": "string"
          },
          "remainingPagedResults": {
            "example": 0,
            "type": "integer"
          },
          "result": {
            "items": {
              "$ref": "#/components/schemas/esvVariableResponseV2"
            },
            "type": "array"
          },
          "resultCount": {
            "example": 4,
            "type": "integer"
          },
          "totalPagedResults": {
            "example": 1,
            "type": "integer"
          },
          "totalPagedResultsPolicy": {
            "type": "string"
          }
        },
        "required": [
          "result",
          "resultCount",
          "pagedResultsCookie",
          "totalPagedResultsPolicy",
          "totalPagedResults",
          "remainingPagedResults"
        ],
        "type": "object"
      },
      "esvVariableResponse": {
        "properties": {
          "_id": {
            "example": "esv-myvariable1",
            "type": "string"
          },
          "description": {
            "example": "My variable",
            "type": "string"
          },
          "expressionType": {
            "example": "list",
            "type": "string"
          },
          "lastChangeDate": {
            "example": "1999-12-31T23:59:59Z",
            "format": "date-time",
            "type": "string"
          },
          "lastChangedBy": {
            "example": "bjensen",
            "type": "string"
          },
          "loaded": {
            "example": false,
            "type": "boolean"
          },
          "valueBase64": {
            "example": "ZGF0YQ==",
            "format": "byte",
            "type": "string"
          }
        },
        "required": [
          "_id",
          "lastChangedBy",
          "expressionType",
          "lastChangeDate",
          "loaded",
          "valueBase64",
          "description"
        ],
        "type": "object"
      },
      "esvVariableResponseV2": {
        "properties": {
          "_id": {
            "example": "esv-myvariable1",
            "type": "string"
          },
          "description": {
            "example": "My variable",
            "type": "string"
          },
          "expressionType": {
            "example": "list",
            "type": "string"
          },
          "lastChangeDate": {
            "example": "1999-12-31T23:59:59Z",
            "format": "date-time",
            "type": "string"
          },
          "lastChangedBy": {
            "example": "bjensen",
            "type": "string"
          },
          "loaded": {
            "example": false,
            "type": "boolean"
          }
        },
        "required": [
          "_id",
          "lastChangedBy",
          "expressionType",
          "lastChangeDate",
          "loaded",
          "description"
        ],
        "type": "object"
      },
      "promotionCIMeta": {
        "properties": {
          "name": {
            "example": "UMA Provider",
            "type": "string",
            "x-omitempty": true
          },
          "realm": {
            "example": "/bravo",
            "type": "string",
            "x-omitempty": true
          },
          "uid": {
            "example": "ou=39c08084-1238-43e8-857f-2e11005eac49,ou=scriptConfigurations,ou=default,ou=OrganizationConfig,ou=1.0,ou=ScriptingService,ou=services,o=alpha,ou=services,ou=am-config",
            "type": "string",
            "x-omitempty": true
          }
        },
        "type": "object"
      },
      "promotionConflictingLockState": {
        "properties": {
          "message": {
            "example": "Environment is not in locked state",
            "type": "string"
          }
        },
        "type": "object"
      },
      "promotionLockState": {
        "properties": {
          "description": {
            "example": "<meaningful when result=Error>",
            "type": "string"
          },
          "lowerEnv": {
            "properties": {
              "promotionId": {
                "example": "ba594bbe-a589-4676-80a4-42975a56f5b6",
                "type": "string"
              },
              "proxyState": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            },
            "type": "object",
            "x-omitempty": true
          },
          "promotionId": {
            "example": "ba594bbe-a589-4676-80a4-42975a56f5b6",
            "type": "string"
          },
          "result": {
            "enum": [
              "unlocked",
              "locking",
              "unlocking",
              "locked",
              "error"
            ],
            "example": "locked",
            "type": "string"
          },
          "upperEnv": {
            "properties": {
              "promotionId": {
                "example": "ba594bbe-a589-4676-80a4-42975a56f5b6",
                "type": "string"
              },
              "proxyState": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            },
            "type": "object",
            "x-omitempty": true
          }
        },
        "type": "object"
      },
      "promotionProgress": {
        "properties": {
          "blockingError": {
            "default": false,
            "example": false,
            "type": "boolean"
          },
          "encryptedSecrets": {
            "items": {
              "example": "mySecret",
              "type": "string"
            },
            "type": "array",
            "x-omitempty": true
          },
          "globalLock": {
            "example": "LOCKED",
            "type": "string"
          },
          "message": {
            "example": "Environment ready for promotion",
            "type": "string"
          },
          "missingESVs": {
            "items": {
              "example": "myVariable",
              "type": "string"
            },
            "type": "array",
            "x-omitempty": true
          },
          "promotionId": {
            "example": "7e7634c3-406e-4d37-80a3-d34461c2f309",
            "type": "string"
          },
          "status": {
            "example": "READY",
            "type": "string"
          },
          "timeStamp": {
            "example": "2022-02-01T14:17:02+01:00",
            "type": "string"
          },
          "type": {
            "description": "Either promotion or rollback depending on whether the report was for a config promotion or a config rollback",
            "example": "promotion",
            "type": "string"
          }
        },
        "type": "object"
      },
      "promotionReport": {
        "properties": {
          "createdDate": {
            "example": "2022-01-27T15-23+00Z",
            "type": "string"
          },
          "dryRun": {
            "type": "boolean"
          },
          "missingESVs": {
            "items": {
              "example": "myVariable",
              "type": "string"
            },
            "type": "array",
            "x-omitempty": true
          },
          "previouslyIgnoredEncryptedSecrets": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-omitempty": true
          },
          "promoter": {
            "description": "The name of the admin user who requested the promotion",
            "example": "Barb Jensen",
            "type": "string"
          },
          "promotionDescription": {
            "description": "Promoter specified note to make it easier for them to identify what was promoted",
            "example": "Promoting our Forgotten Username journey",
            "type": "string"
          },
          "promotionId": {
            "example": "da0c66a4-9f37-4f9a-9988-0786ad301b17",
            "type": "string"
          },
          "report": {
            "properties": {
              "AMConfig": {
                "items": {
                  "$ref": "#/components/schemas/promotionReportContent"
                },
                "type": "array",
                "x-omitempty": true
              },
              "IDMConfig": {
                "items": {
                  "$ref": "#/components/schemas/promotionReportContent"
                },
                "type": "array",
                "x-omitempty": true
              }
            },
            "type": "object"
          },
          "reportId": {
            "example": "da0c66a4-9f37-4f9a-9988-0786ad301b17",
            "type": "string"
          },
          "reportName": {
            "example": "Report_2022-01-27T15-23+00Z_dryrun=true_a7456dd2-1acd-4bd9-8555-d44b2275a2da",
            "type": "string"
          },
          "type": {
            "description": "Either promotion or rollback depending on whether the report was for a config promotion or a config rollback",
            "example": "promotion",
            "type": "string"
          }
        },
        "type": "object"
      },
      "promotionReportContent": {
        "properties": {
          "configChange": {
            "properties": {
              "added": {
                "items": {
                  "$ref": "#/components/schemas/promotionCIMeta"
                },
                "type": "array",
                "x-omitempty": true
              },
              "deleted": {
                "items": {
                  "$ref": "#/components/schemas/promotionCIMeta"
                },
                "type": "array",
                "x-omitempty": true
              },
              "modified": {
                "items": {
                  "$ref": "#/components/schemas/promotionCIMeta"
                },
                "type": "array",
                "x-omitempty": true
              }
            },
            "type": "object"
          },
          "configItem": {
            "example": "Email > Templates",
            "type": "string"
          }
        },
        "type": "object"
      },
      "promotionReportList": {
        "example": [
          {
            "createdDate": "2022-01-19T13:04:00Z",
            "dryRun": true,
            "promotionId": "7575f185-cd0b-4823-b8b1-f677895291d4",
            "reportId": "d19e140-8325-4669-b9f3-1cd82784e24e",
            "type": "rollback"
          },
          {
            "createdDate": "2022-01-19T13:05:00Z",
            "dryRun": true,
            "promotionId": "7575f185-cd0b-4823-b8b1-f677895291dt",
            "reportId": "d19e140-8325-4669-b9f3-1cd82784e24f",
            "type": "promotion"
          }
        ],
        "items": {
          "$ref": "#/components/schemas/promotionReportMeta"
        },
        "type": "array"
      },
      "promotionReportMeta": {
        "properties": {
          "createdDate": {
            "example": "2022-01-26T15:53:05Z",
            "type": "string"
          },
          "dryRun": {
            "example": true,
            "type": "boolean",
            "x-omitempty": false
          },
          "promoter": {
            "example": "rocky.balboa",
            "type": "string"
          },
          "promotionId": {
            "example": "7575f185-cd0b-4823-b8b1-f677895291d4",
            "type": "string"
          },
          "reportId": {
            "example": "d19e140-8325-4669-b9f3-1cd82784e24e",
            "type": "string"
          },
          "type": {
            "description": "Either promotion or rollback depending on whether the report was for a config promotion or a config rollback",
            "example": "promotion",
            "type": "string"
          }
        },
        "type": "object"
      },
      "promotionRequest": {
        "properties": {
          "dryRun": {
            "description": "A boolean denoting whether this a dry run",
            "type": "boolean"
          },
          "ignoreEncryptedSecrets": {
            "description": "A boolean denoting whether or not to ignore encrypted secrets detected in config during the promotion",
            "type": "boolean",
            "x-isnullable": false
          },
          "promoter": {
            "description": "The name of the admin user who initiated the promotion",
            "type": "string",
            "x-isnullable": false
          },
          "promotionDescription": {
            "description": "Promoter specified note to make it easier for them to identify what was promoted",
            "type": "string",
            "x-isnullable": false
          },
          "unlockEnvironmentsAfterPromotion": {
            "description": "A boolean denoting whether or not to automatically unlock the environments after a successful promotion",
            "type": "boolean",
            "x-isnullable": false
          },
          "zendeskTicketReference": {
            "description": "A string denoting the Zendesk ticket reference to be added to the promotion commit message",
            "type": "string",
            "x-isnullable": false
          }
        },
        "required": [
          "dryRun"
        ],
        "type": "object"
      },
      "promotionStart": {
        "properties": {
          "result": {
            "example": "Promotion Complete",
            "type": "string"
          }
        },
        "type": "object"
      },
      "promotionStartLocking": {
        "properties": {
          "description": {
            "example": "Environment lock in progress",
            "type": "string"
          },
          "promotionId": {
            "example": "ba594bbe-a589-4676-80a4-42975a56f5b6",
            "type": "string"
          },
          "result": {
            "example": "locking",
            "type": "string"
          }
        },
        "type": "object"
      },
      "promotionStartUnlocking": {
        "properties": {
          "description": {
            "example": "Environment unlocking in progress",
            "type": "string"
          },
          "promotionId": {
            "example": "ba594bbe-a589-4676-80a4-42975a56f5b6",
            "type": "string"
          },
          "result": {
            "example": "unlocking",
            "type": "string"
          }
        },
        "type": "object"
      },
      "promotionUnlocked": {
        "properties": {
          "description": {
            "example": "Environment unlocked",
            "type": "string"
          },
          "promotionId": {
            "example": "ba594bbe-a589-4676-80a4-42975a56f5b6",
            "type": "string"
          },
          "result": {
            "example": "unlocked",
            "type": "string"
          }
        },
        "type": "object"
      },
      "rollbackRequest": {
        "properties": {
          "promoter": {
            "description": "The name of the admin user who initiated the promotion",
            "type": "string",
            "x-isnullable": false
          },
          "promotionDescription": {
            "description": "Promoter specified note to make it easier for them to identify what was promoted",
            "type": "string",
            "x-isnullable": false
          },
          "unlockEnvironmentsAfterPromotion": {
            "description": "A boolean denoting whether or not to automatically unlock the environments after a successful promotion",
            "type": "boolean",
            "x-isnullable": false
          },
          "zendeskTicketReference": {
            "description": "A string denoting the Zendesk ticket reference to be added to the promotion commit message",
            "type": "string",
            "x-isnullable": false
          }
        },
        "type": "object"
      },
      "rollbackStart": {
        "properties": {
          "result": {
            "example": "Rollback Complete",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "requestBodies": {
      "ContentSecurityPolicy": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ContentSecurityPolicy"
            }
          }
        },
        "description": "Enforced content security policy to apply to the tenant",
        "required": true
      }
    }
  }
}